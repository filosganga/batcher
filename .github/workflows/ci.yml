name: ci

on:
  push:
    branches:
      - main
      - release/*
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref == 'refs/heads/main' || startsWith( github.ref, 'refs/heads/release/' ) }}

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Restore dependencies
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: sbt-${{ hashFiles('**/*.sbt', 'project/build.properties') }}
      - name: Update dependencies
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: sbt +update
      - name: Cache dependencies
        uses: actions/cache/save@v3
        if: steps.cache-restore.outputs.cache-hit != 'true'
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: sbt-${{ hashFiles('**/*.sbt', 'project/build.properties') }}
      - run: sbt "+scalafmtCheckAll;+headerCheckAll;+Test/compile;+scalafixAll --check"
      - uses: alehechka/upload-tartifact@v2
        with:
          name: targets
          path: "**/target/**"
          if-no-files-found: error
          retention-days: 1

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Restore dependencies
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: sbt-${{ hashFiles('**/*.sbt', 'project/build.properties') }}
      - uses: alehechka/download-tartifact@v2
        with:
          name: targets
      - run: sbt +Test/test
      - uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          list-suites: "all"
          list-tests: "all"
          max-annotations: 10
          fail-on-error: true
          name: unit tests report
          path: "**/target/test-reports/*.xml"
          reporter: java-junit

  integration-tests:
    runs-on: ubuntu-latest
    needs: build
    env:
      DYNAMODB_ENDPOINT: "http://localhost:8000"
      AWS_REGION: "eu-west-1"
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

    services:
      dynamodb:
        image: amazon/dynamodb-local:1.21.0
        ports:
          - "8000:8000"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Restore dependencies
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: sbt-${{ hashFiles('**/*.sbt', 'project/build.properties') }}
      - uses: alehechka/download-tartifact@v2
        with:
          name: targets
      - run: sbt +IntegrationTest/test
      - uses: dorny/test-reporter@v1
        # run this step even if previous step failed
        if: success() || failure()
        with:
          list-suites: "all"
          list-tests: "all"
          max-annotations: 10
          fail-on-error: true
          name: integration-tests-report
          path: "**/target/it-reports/*.xml"
          reporter: java-junit

  publish:
    if: github.ref == 'refs/heads/main' || startsWith( github.ref, 'refs/heads/release/' ) # Only runs on pushes
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - integration-tests
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Restore dependencies
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: sbt-${{ hashFiles('**/*.sbt', 'project/build.properties') }}
      - uses: alehechka/download-tartifact@v2
        with:
          name: targets
      - uses: scalacenter/sbt-dependency-submission@v2
      - run: git fetch --tags
      - run: git status
      - name: Bump version and push tag
        id: tag-version
        uses: anothrNick/github-tag-action@1.61.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          TAG_CONTEXT: branch
      - name: Create a GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag-version.outputs.new_tag }}
          name: ${{ steps.tag-version.outputs.new_version }}
          body: ${{ steps.tag-version.outputs.changelog }}
      - run: git fetch --tags
      - run: echo $PGP_SECRET | base64 -d | gpg --import
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
      - run: sbt "+publishSigned; sonatypeBundleRelease"
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASS: ${{ secrets.SONATYPE_PASS }}
